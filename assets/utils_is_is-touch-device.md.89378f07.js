import{_ as s,c as e,o as n,a}from"./app.40fe1d44.js";const y=JSON.parse('{"title":"isTouchDevice","description":"","frontmatter":{},"headers":[{"level":2,"title":"Type Definitions","slug":"type-definitions"}],"relativePath":"utils/is/is-touch-device.md","lastUpdated":1666689318000}'),o={name:"utils/is/is-touch-device.md"},t=a(`<h1 id="istouchdevice" tabindex="-1">isTouchDevice <a class="header-anchor" href="#istouchdevice" aria-hidden="true">#</a></h1><blockquote><p>Identifies if the code is being run on a touch device.</p></blockquote><h2 id="type-definitions" tabindex="-1">Type Definitions <a class="header-anchor" href="#type-definitions" aria-hidden="true">#</a></h2><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">returns</span><span style="color:#676E95;"> If the code is being run on a touch device.</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isTouchDevice</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>
<span class="line"></span></code></pre></div>`,4),c=[t];function i(l,p,r,d,h,u){return n(),e("div",null,c)}const f=s(o,[["render",i]]);export{y as __pageData,f as default};
